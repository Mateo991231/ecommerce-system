name: CI Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  backend-test:
    runs-on: ubuntu-latest
    name: Backend Tests
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    
    - name: Run Backend Tests
      run: |
        cd backend
        chmod +x ./mvnw
        ./mvnw clean test
    
    - name: Generate Test Report
      run: |
        cd backend
        ./mvnw jacoco:report
    
    - name: Upload Coverage Reports
      uses: actions/upload-artifact@v3
      with:
        name: backend-coverage
        path: backend/target/site/jacoco/

  frontend-test:
    runs-on: ubuntu-latest
    name: Frontend Tests
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install Frontend Dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run Frontend Tests
      run: |
        cd frontend
        npm test -- --coverage --watchAll=false
    
    - name: Upload Coverage Reports
      uses: actions/upload-artifact@v3
      with:
        name: frontend-coverage
        path: frontend/coverage/

  docker-build:
    runs-on: ubuntu-latest
    name: Docker Build Test
    needs: [backend-test, frontend-test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker Images
      run: |
        docker-compose build
    
    - name: Test Docker Compose
      run: |
        docker-compose up -d
        sleep 30
        
        # Test if services are running
        curl -f http://localhost:8080/actuator/health || exit 1
        curl -f http://localhost || exit 1
        
        docker-compose down

  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality Check
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Backend Linting
      run: |
        cd backend
        chmod +x ./mvnw
        ./mvnw compile
    
    - name: Run Frontend Linting
      run: |
        cd frontend
        npm ci
        npm run build